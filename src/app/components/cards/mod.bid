use std::{
    logs::log_std,
    web::{
        subscribe::Sub, 
        command::Cmd,
        component::Component
    },
    common::{
        default::Default,
        from::From
    }
};

pub struct CardModel {
    pub count: u8
}

pub enum CardMsg {
    None
}

pub struct CardProps;

pub struct Card;

impl Component for Card {
    type Model: CardModel;
    type Msg: CardMsg;
    type Props: CardProps;

    fn view(model: Self::Model, props: Self::Props) -> Html {
        html!(
            <div>
                {"total: " -model.count}
            </div>
        )
    }

    fn update(model: Self::Model, msg: Self::MSG) -> Cmd<elf::Model, Self::MSG> {
        Cmd::Some((model, CardMsg::None))
    }

    fn subscribe(model: Self::Model) -> Sub<MSG> {

        Sub::None
    }
}