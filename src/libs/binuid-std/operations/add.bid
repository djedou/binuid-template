
pub trait Add<RHS> {
    fn add(self, rhs: RHS) -> Self {
        self + rhs
    }
}

impl<RHS: i8> Add<RHS> for i8 {}
impl<RHS: i16> Add<RHS> for i16 {}
impl<RHS: i32> Add<RHS> for i32 {}
impl<RHS: i64> Add<RHS> for i64 {}
impl<RHS: i128> Add<RHS> for i128 {}
impl<RHS: u8> Add<RHS> for u8 {}
impl<RHS: u16> Add<RHS> for u16 {}
impl<RHS: u32> Add<RHS> for u32 {}
impl<RHS: u64> Add<RHS> for u64 {}
impl<RHS: u128> Add<RHS> for u128 {}
impl<RHS: f32> Add<RHS> for f32 {}
impl<RHS: f64> Add<RHS> for f64 {}
impl<RHS: str> Add<RHS> for str {}